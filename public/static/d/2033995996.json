{"data":{"posts":{"edges":[{"node":{"id":"36d0fff2-8d84-5a3e-b5f1-760000e52c6a","html":"<p>We all have a process and a preference for how we do things. As with anything related to software development, opinions abound on all sides. I’m not saying that the applications I use in my day to day are what everyone should use. They’ve become daily uses for me, and I hope some of them might prove useful to you as well.</p>\n<p><a href=\"https://brew.sh/\" title=\"Homebrew Homepage\">Homebrew</a><br>\nIf you didn’t know before, you can use brew to manage a lot more than only CLI tools. Brew Cask will install a wide range of products that are available online. If an app is only available on the App Store, <a href=\"https://github.com/mas-cli/mas\" title=\"mas github repo\">Mac App Store CLI</a>. Mas is like brew, but for the App Store. You have to have downloaded the app once from the store, so it won’t work for the initial install. I find using brew to be faster than going to a site, downloading a tar, unpacking, and everything. Brew handles that for you, and the most important part, deletes it when you no longer want it on your machine.<br><br></p>\n<p><a href=\"http://www.bear-writer.com/\" title=\"Bear Homepage\">Bear</a><br>\nI recently switched to Bear after having used Evernote for four years. For one, Bear is <strong>fast</strong> and looks fantastic, as one would expect since it is from a design company. It’s also inexpensive for a premium subscription ($14.99 per year), even though it has a full freemium model. The main thing free tier is missing is the ability to sync notes across devices and unlock more themes.</p>\n<p>My <a href=\"https://www.codelyon.com/\" title=\"codelyon.com\">blog</a> uses Gatsby, a static site generator that can use Markdown to generate posts. Which Bear is compatible with rendering, unlike Evernote. Having the ability to keep post ideas, lists, notes, and articles all in one location is quite handy.<br><br></p>\n<p><a href=\"https://www.spectacleapp.com/\" title=\"Spectacle Homepage\">Spectacle</a><br>\nOne of the most annoying parts of MacOS, to me at least, is window management, more like the lack thereof. Coming from Windows I'm used to the fancy drag to the side of the screen and the OS resizes the window to fit for me. I missed that when switching to Mac, and while Spectacle isn’t <em>quite</em> the same, it’s pretty damn close.</p>\n<p>Spectacle works via keyboard shortcuts, which is nice if you spend a <strong>lot</strong> of time using one. Open source, and completely free. You can resize to fill the full screen, center a window, halves, thirds, quarters.<br><br></p>\n<p><a href=\"https://cordlessdog.com/stay/\" title=\"Stay Homepage\">Stay</a><br>\nAn annoying thing about MacOS is the tendency for windows to disappear or be offscreen when using external displays. Unplugging from many screens to work on a single display is generally fine. Plugging back into external displays often results in the application windows rearranging. First world problems, I know, but sometimes you want things to be how they were the last time you were using it. Stay “stores” your application windows for you, and will restore them. This way if you run into any of this window hiding BS, you can restore them without having to kill the application.<br><br></p>\n<p><a href=\"https://justgetflux.com/\" title=\"Flux Homepage\">f.lux</a><br>\nI’m likely not the only one, but I tend to turn the brightness <strong>way</strong> down on my screens, MacBook and secondary screens. I’ve had problems in the past with headaches due to a combination of bright screens and outdated glasses. Flux helps with eye strain and filtering of blue light that can keep our brains from becoming tired. This doesn’t work so well if you need to have color accuracy, but for the majority of my time, I have a slight yellow tinge to my display.<br><br></p>\n<p><a href=\"http://tomighty.org/\" title=\"Tomighty Page\">Tomighty</a><br>\nOh, the mighty Pomodoro. I’ve gotten more done since adopting this technique than I could have hoped for. Granted some days it’s easier than others to focus on tasks. I find that breaking things up into 25 min blocks is great, and Tomighty helps out. With keyboard shortcuts and tracking how many I’ve completed. This is one of the first apps I install when setting up a new machine.<br><br></p>\n<p><a href=\"http://airmailapp.com/\" title=\"Airmail Homepage\">Airmail</a><br>\nI find the default Mail app to be slow. A former co-worker showed me Airmail, and in the beginning, I didn’t want to try it due to it not being free. Being a broke college student at the time, I couldn't justify it. Yet, I don’t think I’ll ever go back. The ability to handle a significant amount of inboxes, smart folders, and automation rules to handle different types of mail, this client has everything I need in a sleek, fast package.<br><br></p>\n<p><a href=\"https://app.grammarly.com/\" title=\"Grammarly Homepage\">Grammarly</a><br>\nI use the free version but have considered getting a subscription. I write enough and forget how to spell enough to justify it. The better part of this app is the grammar enhancement.<br><br></p>\n<p><a href=\"https://www.alfredapp.com/\" title=\"Alfred Homepage\">Alfred</a><br>\nWhen I first discovered Spotlight I couldn’t believe it. I can open applications without having to open the finder, or the dock, or an icon on the desktop. I started reading and hearing about Alfred in articles and podcasts, so I knew I had to give it a shot. The free version is very powerful, the ability to open applications and files, search Google (or your browser of choice) with customizable hotkeys and extensibility is pretty awesome. I stuck with the free version for a year before finally buying a license, workflows are what convinced me after reading about the <a href=\"http://devdocs.io/\" title=\"devdocs Homepage\">devdocs</a> integration. Now I have the ability to search the devdocs documentation from Alfred. I've barely scratched the surface of what this tool can do, and could likely write an entire post on it alone.</p>","excerpt":"We all have a process and a preference for how we do things. As with anything related to software development, opinions abound on all sides…","frontmatter":{"path":"/my-mac-setup-2018-1","title":"My Mac Setup 2018: GUI Edition","date":"2018.03.28","keywords":"homebrew, bear, spectacle, stay, flux, tomighty, pomodoro, window management, notetaking, markdown, package manager, macos, OSX, mac, Airmail, grammarly, alfred, spotlight, grammar, development, process, productivity"}}},{"node":{"id":"fffce147-ea00-5fd7-99f9-e6f4637e9a32","html":"<p>Every now and then you just need a good reference</p>\n<!--more-->\n<br>\n<h2>Docker Machine</h2>\n<p>docker-machine commands aren't needed if using the GUI toolkit, but where's the fun in that?</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># Start VM\ndocker-machine start\n\n# Stop VM\ndocker-machine stop\n\n# Display Docker client setup commands\ndocker-machine env</code></pre></div>\n<br>\n<h2>Docker</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># List Docker CLI commands\ndocker\n\n# Get help on a specific command\ndocker &lt;command&gt; --help\n\n# Pull image from Docker Hub\ndocker pull &lt;Name of Image&gt;\n\n# Show all images\ndocker images\n\n# Remove specific images\ndocker rmi &lt;ImageID&gt;\n\n# Show all containers based on Docker env config\ndocker ps -a\n\n# Remove specific container\ndocker rm &lt;ContainerID&gt;\n\n# Remove all containers\ndocker rm $(docker ps -a -q)\n\n# Formatted list of containers\ndocker ps --format &#39;table {{.Names}}\\t{{.Image}}\\t{{.Status}}&#39;\n\n# Run a container in daemon mode bound to specified port\ndocker run -d --name &lt;Container Name&gt; -p &lt;External Port:Container Port&gt; &lt;Your Image&gt;\n\n# Build an image from a Dockerfile located in the current directory\ndocker build -f &lt;Your Dockerfile&gt; -t &lt;Tag Name&gt; .\n\n# Login using your Docker Hub credentials\ndocker login\n\n# Push an image to Docker hub\ndocker push &lt;Your Image Name&gt;</code></pre></div>\n<br>\n<h2>Docker Compose</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># Build images based on docker-compose\ndocker-compose build\n\n# Start in daemon mode\ndocker-compose up -d\n\n# Show logs from containers | useful in daemon mode\ndocker-compose logs\n\n# Start containers based on docker-compose.yml\ndocker-compose up\n\n# Rebuild and deploy just the container that needs updating\ndocker-compose up -d --no-deps --build &lt;service_name&gt;\n\n# Start containers using docker-compose file in another directory\ndocker-compose -f &lt;Filepath&gt; up\n\n# Stop containers but dont remove them\ndocker-compose stop\n\n# Stop and remove containers | CTRL+C/CMD+C can also be used but this is safer\ndocker-compose down</code></pre></div>","excerpt":"Every now and then you just need a good reference Docker Machine docker-machine commands aren't needed if using the GUI toolkit, but where's…","frontmatter":{"path":"/useful-docker-commands","title":"Useful Docker Commands","date":"2018.03.21","keywords":"docker, docker-compose, containers, containerization, cloud, vm, redis, microservices, developer, dev, development, software, convenience, article, blog post, blog"}}},{"node":{"id":"5469104b-c435-5ee5-aaa4-e6e0831c3f3c","html":"<p>It seems appropriate to not only start this today, but to use this title. Since my son Mason has said his own “Hello, world!” today. Being a newborn, he can’t speak yet but he’s at the beginning of his journey. Much like we all were at one point or another, and with each new thing we learn, continue that journey into a new realm.</p>\n<p>I remember writing my first program as a kid, and by program it was “Hello, world!” printed to the screen. (Likely followed shortly after by something crude). It was gratifying to make that happen, even though looking back it was trivial compared to what I’ve done since. My original goal was to create games, and I did for a bit. I’m still upset with myself that I didn’t keep copies of those text adventure games. As terrible as they were it would have been great to go back and look them over now. A benchmark of a much younger me, a stranger at this point.</p>\n<p>My plan for this site is to write about what I’m building, what and how I’m learning as I go. A reflective look at things, and a way to help others if they stumble upon a post.</p>","excerpt":"It seems appropriate to not only start this today, but to use this title. Since my son Mason has said his own “Hello, world!” today. Being a…","frontmatter":{"path":"/hello-world","title":"Hello, world!","date":"2017.12.08","keywords":"hello, world, post, newborn, son, journey"}}}]}}}